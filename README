========================================================================
 UNKNOWN-file
    author:              Ethan T. Coon
    filename:            README
    version:             
    created:             12 July 2011
      on:                12:11:17 MDT
    last modified:   08 August 2011
      at:            15:34:03 MDT
    URL:                 http://www.ldeo.columbia.edu/~ecoon/
    email:               ecoon _at_ lanl.gov
 
========================================================================

README for <NAME>

<NAME> is a parallel implementation of the Lattice Boltzmann Method for simulation of flow in porous and geometrically complex media.

<NAME> uses the license seen in LICENSE

The implementation:

    * solves both single and multi-phase systems, with or without passive transport of multiple species.
    * is capable of solving D2Q9, D3Q19, and other mesh dependencies, on 2D or 3D grids. It is easily extended to other models of connectivity.
    * uses the Shan and Chen Lattice Boltzmann Method (ref:).
    * handles multi-phase systems with different phase viscosities and/or molecular masses.
    * includes the ability to use (or not use) higher order derivatives (ref:) or multiple relaxation times (ref:) to improve stability at large viscosity ratios.
    * enables multiple mineral/wall materials, allowing for different wettabilities and contact angles on each mineral.
    * supports arbitrary, heterogeneous boundary conditions. 

    * is massively parallel, showing excellent strong and weak scaling to X cores (update with Jaguar numbers!)
    * is modular, "object-oriented" Fortran-90, enabling extension for new features.
    * leverages  PETSc, the Portable, Extensible Toolkit for Scientific Computation for data structures, communication, and (parallel) I/O.
    * may be called from  PFloTran, a massively parallel solver for reactive transport in porous media. This allows for micro-scale solution of reactive transport, using <NAME> for flow. 

    * currently only allows structured, regular meshes.
    * currently is not implemented on GPUs (coming soon?)
    * currently does not handle curved geometries or other non-bounceback style interior boundary conditions (but we're accepting contributions!) 

Authors:

    * Ethan Coon (ecoon _at_ lanl.gov) (Primary Contact)
    * Mark Porter (porterma _at_ lanl.gov)
    * Qinjun Kang (qkang _at_ lanl.gov) 

Getting <NAME>:
  Contact ecoon _at_ lanl.gov

Installing <NAME>:
  To install, see INSTALL (or the manual)

Testing installation:
  $>  cd tests/{test_name}/
  $>  make test

Using <NAME>: 
  To use, see docs/README on how to make the manual and quickstart guide.
